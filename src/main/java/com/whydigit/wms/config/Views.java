package com.whydigit.wms.config;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.JdbcTemplate;

@Configuration
public class Views {
	
	@Autowired
    private JdbcTemplate jdbcTemplate;

    @PostConstruct
    public void initialize() {
        try {
            executeQueries();
        } catch (Exception e) {
            throw new RuntimeException("Error initializing database", e);
        }
    }

    private void executeQueries() {
    
    	jdbcTemplate.execute("create or replace view vw_clientbindetails as\r\n"
    			+ "select a.branch,a.branchcode,a.client,a.clienttype,a.orgid,b.active,b.bin,b.bincategory,b.core,b.levelno,a.bintype,b.binstatus,b.rowno,b.warehouse from locationmapping a,locationmappingdetails b\r\n"
    			+ "where a.locationmappingid=b.locationmappingid group by a.branch,a.branchcode,a.client,a.clienttype,a.orgid,b.active,b.bin,b.bincategory,b.core,b.levelno,a.bintype,b.binstatus,b.rowno,b.warehouse");
    	jdbcTemplate.execute("create or replace view WV_HANDLINGINNEW as\r\n"
    			+ "WITH RECURSIVE seq AS (\r\n"
    			+ "    SELECT 1 AS n\r\n"
    			+ "    UNION ALL\r\n"
    			+ "    SELECT n + 1 \r\n"
    			+ "    FROM seq \r\n"
    			+ "    WHERE n < (SELECT MAX(handlingstockin.noofpallet) FROM handlingstockin)\r\n"
    			+ ")\r\n"
    			+ "SELECT \r\n"
    			+ "    a.branchcode AS branchcode,\r\n"
    			+ "    a.warehouse AS warehouse,\r\n"
    			+ "    a.client AS client,\r\n"
    			+ "    a.grnno AS grnno,\r\n"
    			+ "    a.partno AS partno,\r\n"
    			+ "    a.partdesc AS partdesc,\r\n"
    			+ "    a.locationtype AS locationtype,\r\n"
    			+ "    a.grndate AS grndate,\r\n"
    			+ "    a.damageqty AS damageqty,\r\n"
    			+ "    a.shortqty AS shortqty,\r\n"
    			+ "    a.sku AS sku,\r\n"
    			+ "    a.orgid as orgid,\r\n"
    			+ "    a.qcflag AS qcflag,\r\n"
    			+ "    a.invqty AS invqty,\r\n"
    			+ "    a.recqty AS recqty,\r\n"
    			+ "    a.palletqty AS palletqty,\r\n"
    			+ "    a.sqty AS sqty,\r\n"
    			+ "    a.noofpallet AS noofpallet,\r\n"
    			+ "    a.pq AS pq,\r\n"
    			+ "    a.batchno AS batchno,\r\n"
    			+ "    a.batchdt AS batchdt,\r\n"
    			+ "    a.expdate AS expdate,\r\n"
    			+ "    l.n AS columnvalue\r\n"
    			+ "FROM (\r\n"
    			+ "    SELECT \r\n"
    			+ "        handlingstockin.branchcode AS branchcode,\r\n"
    			+ "        handlingstockin.warehouse AS warehouse,\r\n"
    			+ "        handlingstockin.client AS client,\r\n"
    			+ "        handlingstockin.grnno AS grnno,\r\n"
    			+ "        handlingstockin.partno AS partno,\r\n"
    			+ "        handlingstockin.partdesc AS partdesc,\r\n"
    			+ "        handlingstockin.locationtype AS locationtype,\r\n"
    			+ "        handlingstockin.grndate AS grndate,\r\n"
    			+ "        SUM(handlingstockin.damageqty) AS damageqty,\r\n"
    			+ "        SUM(handlingstockin.shortqty) AS shortqty,\r\n"
    			+ "        handlingstockin.sku AS sku,\r\n"
    			+ "        handlingstockin.orgid as orgid,\r\n"
    			+ "        handlingstockin.qcflag AS qcflag,\r\n"
    			+ "        SUM(handlingstockin.invqty) AS invqty,\r\n"
    			+ "        SUM(handlingstockin.recqty) AS recqty,\r\n"
    			+ "        SUM(handlingstockin.palletqty) AS palletqty,\r\n"
    			+ "        SUM(handlingstockin.sqty) AS sqty,\r\n"
    			+ "        SUM(handlingstockin.noofpallet) AS noofpallet,\r\n"
    			+ "        SUM(handlingstockin.palletqty) AS pq,\r\n"
    			+ "        handlingstockin.batchno AS batchno,\r\n"
    			+ "        handlingstockin.batchdt AS batchdt,\r\n"
    			+ "        handlingstockin.expdate AS expdate\r\n"
    			+ "    FROM \r\n"
    			+ "        handlingstockin \r\n"
    			+ "    GROUP BY \r\n"
    			+ "        handlingstockin.branchcode,\r\n"
    			+ "        handlingstockin.warehouse,\r\n"
    			+ "        handlingstockin.client,\r\n"
    			+ "        handlingstockin.grnno,\r\n"
    			+ "        handlingstockin.partno,\r\n"
    			+ "        handlingstockin.partdesc,\r\n"
    			+ "        handlingstockin.locationtype,\r\n"
    			+ "        handlingstockin.sku,\r\n"
    			+ "        handlingstockin.orgid,\r\n"
    			+ "        handlingstockin.qcflag,\r\n"
    			+ "        handlingstockin.grndate,\r\n"
    			+ "        handlingstockin.batchno,\r\n"
    			+ "        handlingstockin.batchdt,\r\n"
    			+ "        handlingstockin.expdate\r\n"
    			+ "    HAVING \r\n"
    			+ "        SUM(handlingstockin.sqty) > 0\r\n"
    			+ ") a \r\n"
    			+ "JOIN seq l ON (l.n <= a.noofpallet) \r\n"
    			+ "ORDER BY \r\n"
    			+ "    a.grnno, a.partno, l.n\r\n"
    			+ "");
    	jdbcTemplate.execute("create or replace view wv_locationstatus as\r\n"
    			+ "SELECT \r\n"
    			+ "        hh.orgid AS orgid,\r\n"
    			+ "        hh.branch AS branch,\r\n"
    			+ "        hh.branchcode AS branchcode,\r\n"
    			+ "        hh.warehouse AS warehouse,\r\n"
    			+ "        hh.client AS client,\r\n"
    			+ "        hh.binclass AS binclass,\r\n"
    			+ "        hh.bin AS bin,\r\n"
    			+ "        hh.celltype AS celltype,\r\n"
    			+ "        hh.bintype AS bintype,\r\n"
    			+ "        hh.core AS core,\r\n"
    			+ "        hh.binstatus AS binstatus\r\n"
    			+ "    FROM\r\n"
    			+ "        (SELECT \r\n"
    			+ "            a.orgid AS orgid,\r\n"
    			+ "                a.branch AS branch,\r\n"
    			+ "                a.branchcode AS branchcode,\r\n"
    			+ "                a.warehouse AS warehouse,\r\n"
    			+ "                a.client AS client,\r\n"
    			+ "                a.binclass AS binclass,\r\n"
    			+ "                a.bin AS bin,\r\n"
    			+ "                a.celltype AS celltype,\r\n"
    			+ "                a.bintype AS bintype,\r\n"
    			+ "                a.core AS core,\r\n"
    			+ "                a.binstatus AS binstatus\r\n"
    			+ "        FROM\r\n"
    			+ "            (SELECT \r\n"
    			+ "            stockdetails.orgid AS orgid,\r\n"
    			+ "                stockdetails.branch AS branch,\r\n"
    			+ "                stockdetails.branchcode AS branchcode,\r\n"
    			+ "                stockdetails.warehouse AS warehouse,\r\n"
    			+ "                stockdetails.client AS client,\r\n"
    			+ "                stockdetails.binclass AS binclass,\r\n"
    			+ "                stockdetails.bin AS bin,\r\n"
    			+ "                stockdetails.celltype AS celltype,\r\n"
    			+ "                stockdetails.bintype AS bintype,\r\n"
    			+ "                stockdetails.core AS core,\r\n"
    			+ "                SUM(stockdetails.sqty) AS total_qty,\r\n"
    			+ "                (CASE\r\n"
    			+ "                    WHEN (SUM(stockdetails.sqty) > 0) THEN 'Occupied'\r\n"
    			+ "                    ELSE 'Empty'\r\n"
    			+ "                END) AS binstatus\r\n"
    			+ "        FROM\r\n"
    			+ "            stockdetails\r\n"
    			+ "        GROUP BY stockdetails.orgid , stockdetails.branch , stockdetails.branchcode , stockdetails.warehouse , stockdetails.client , stockdetails.binclass , stockdetails.bin , stockdetails.bintype , stockdetails.core , stockdetails.celltype) a UNION ALL SELECT \r\n"
    			+ "            vw_clientbindetails.orgid AS orgid,\r\n"
    			+ "                vw_clientbindetails.branch AS branch,\r\n"
    			+ "                vw_clientbindetails.branchcode AS branchcode,\r\n"
    			+ "                vw_clientbindetails.warehouse AS warehouse,\r\n"
    			+ "                vw_clientbindetails.client AS client,\r\n"
    			+ "                vw_clientbindetails.clienttype AS binclass,\r\n"
    			+ "                vw_clientbindetails.bin AS bin,\r\n"
    			+ "                vw_clientbindetails.binstatus AS celltype,\r\n"
    			+ "                vw_clientbindetails.bintype AS bintype,\r\n"
    			+ "                vw_clientbindetails.core AS core,\r\n"
    			+ "                'Empty' AS binstatus\r\n"
    			+ "        FROM\r\n"
    			+ "            vw_clientbindetails\r\n"
    			+ "        WHERE\r\n"
    			+ "            CONCAT(vw_clientbindetails.orgid, vw_clientbindetails.branch, vw_clientbindetails.branchcode, vw_clientbindetails.warehouse, vw_clientbindetails.client, vw_clientbindetails.bin) IN (SELECT \r\n"
    			+ "                    CONCAT(stockdetails.orgid, stockdetails.branch, stockdetails.branchcode, stockdetails.warehouse, stockdetails.client, stockdetails.bin)\r\n"
    			+ "                FROM\r\n"
    			+ "                    stockdetails\r\n"
    			+ "                GROUP BY stockdetails.orgid , stockdetails.branch , stockdetails.branchcode , stockdetails.warehouse , stockdetails.client , stockdetails.binclass , stockdetails.bin , stockdetails.bintype , stockdetails.core , stockdetails.celltype\r\n"
    			+ "                HAVING (SUM(stockdetails.sqty) > 0))\r\n"
    			+ "                IS FALSE\r\n"
    			+ "        ORDER BY branch , warehouse , client , bin) hh\r\n"
    			+ "    GROUP BY hh.orgid , hh.branch , hh.branchcode , hh.warehouse , hh.client , hh.binclass , hh.bin , hh.celltype , hh.bintype , hh.core , hh.binstatus");
    	
    	jdbcTemplate.execute("CREATE OR REPLACE  VIEW VW_BO as\r\n"
    			+ "     SELECT a.orgid,\r\n"
    			+ "     a.finyear,\r\n"
    			+ "            branchcode,\r\n"
    			+ "            client,\r\n"
    			+ "            a.docid,\r\n"
    			+ "            a.docdate,\r\n"
    			+ "            a.orderno,\r\n"
    			+ "            a.orderdate,\r\n"
    			+ "            a.refno,\r\n"
    			+ "            a.refdate,\r\n"
    			+ "            a.buyershortname SHORTNAME,\r\n"
    			+ "            a.buyer BUYERNAME,\r\n"
    			+ "            a.billto,\r\n"
    			+ "            a.shipto,\r\n"
    			+ "            b.partno,\r\n"
    			+ "            b.partdesc,\r\n"
    			+ "            b.batchno,\r\n"
    			+ "            b.expdate sdate,\r\n"
    			+ "            SUM(b.qty) BOQTY\r\n"
    			+ "       FROM buyerorder a, buyerorderdetails b\r\n"
    			+ "      WHERE a.buyerorderid = b.buyerorderid AND cancel = 0\r\n"
    			+ "   GROUP BY a.orgid,a.finyear,\r\n"
    			+ "            branchcode,\r\n"
    			+ "            client,\r\n"
    			+ "            a.docid,\r\n"
    			+ "            a.docdate,\r\n"
    			+ "            a.orderno,\r\n"
    			+ "            a.orderdate,\r\n"
    			+ "            a.refno,\r\n"
    			+ "            a.refdate,\r\n"
    			+ "            a.buyershortname,\r\n"
    			+ "            a.buyer,\r\n"
    			+ "            a.billto,\r\n"
    			+ "            a.shipto,\r\n"
    			+ "            b.partno,\r\n"
    			+ "            b.partdesc,\r\n"
    			+ "            b.batchno,\r\n"
    			+ "            b.expdate");
    	
    	jdbcTemplate.execute("CREATE OR REPLACE  VIEW VW_PR as SELECT c.orgid,c.finyear,\r\n"
    			+ "            c.branchcode,\r\n"
    			+ "            c.customershortname CSHORT, \r\n"
    			+ "            c.client,\r\n"
    			+ "            c.customer,\r\n"
    			+ "            c.customername,\r\n"
    			+ "            c.clientshortname,\r\n"
    			+ "            c.clientname,\r\n"
    			+ "             c.docid,\r\n"
    			+ "             c.docdate,\r\n"
    			+ "            c.buyerrefno REFNO,\r\n"
    			+ "            c.buyerrefdate REFNODATE,\r\n"
    			+ "            c.buyerorderno,\r\n"
    			+ "            c.buyerorderno buyerordno,\r\n"
    			+ "            d.partno,\r\n"
    			+ "            d.partdesc,\r\n"
    			+ "            d.batchno,\r\n"
    			+ "            d.orderqty,\r\n"
    			+ "            SUM(d.pickqty) sqty,\r\n"
    			+ "            SUM(pickqty) pickedqty,\r\n"
    			+ "            (d.orderqty - SUM(d.pickqty)) Pendingqty,\r\n"
    			+ "            c.status\r\n"
    			+ "       FROM pickrequest c, pickrequestdetails d\r\n"
    			+ "      WHERE c.pickrequestid = d.pickrequestid AND c.cancel = 0\r\n"
    			+ "   GROUP BY c.orgid,c.finyear,\r\n"
    			+ "            c.branchcode,\r\n"
    			+ "            c.client,\r\n"
    			+ "            c.customername,\r\n"
    			+ "            c.customershortname,\r\n"
    			+ "            clientshortname,\r\n"
    			+ "            c.clientname,\r\n"
    			+ "           c.docid,\r\n"
    			+ "           c.docdate,\r\n"
    			+ "            c.buyerrefno,\r\n"
    			+ "            c.buyerrefdate,\r\n"
    			+ "            c.buyerorderno,\r\n"
    			+ "            d.partno,\r\n"
    			+ "            c.customer,\r\n"
    			+ "            d.partdesc,\r\n"
    			+ "            d.batchno,\r\n"
    			+ "            d.orderqty,\r\n"
    			+ "            d.orderqty,\r\n"
    			+ "            c.status\r\n"
    			+ "   ORDER BY docdate DESC");
    }

}
